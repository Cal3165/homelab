argo-cd:
  global:
    domain: argocd.notusa.uk
  configs:
    params:
      server.insecure: true
      controller.diff.server.side: true
    rbac:
      policy.csv: |
        g, ArgoCD Admins, role:admin
        g, ArgoCD Viewers, role:readonly
    cm:
      dex.config: |
        connectors:
        - config:
            issuer: https://auth.notusa.uk/application/o/argocd/
            clientID: $argocd-authentik-secret:client_id
            clientSecret: $argocd-authentik-secret:secret
            insecureEnableGroups: true
            scopes:
              - openid
              - profile
              - email
          name: authentik
          type: oidc
          id: authentik
      resource.customizations: |
          argoproj.io/Application:
            health.lua: |
              hs = {}
              hs.status = "Progressing"
              hs.message = ""
              if obj.status ~= nil then
                if obj.status.health ~= nil then
                  hs.status = obj.status.health.status
                  if obj.status.health.message ~= nil then
                    hs.message = obj.status.health.message
                  end
                end
              end
              return hs
          argoproj.io/ApplicationSet:
            health.lua: |
              hs = {}
              hs.status = "Progressing"
              hs.message = ""
              if obj.status ~= nil then
                if obj.status.health ~= nil then
                  hs.status = obj.status.health.status
                  if obj.status.health.message ~= nil then
                    hs.message = obj.status.health.message
                  end
                end
              end
              return hs
      resource.ignoreResourceUpdatesEnabled: true
      resource.customizations.ignoreResourceUpdates.all: |
        jsonPointers:
          - /status
  server:
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      tls: true
    metrics: &metrics
      enabled: true
      serviceMonitor:
        enabled: true
  dex:
    enabled: true
  controller:
    metrics: *metrics
  repoServer:
    metrics: *metrics
  redis:
    metrics: *metrics
argocd-apps:
  applications:
    appOfApps:
      namespace: argocd
      finalizers:
        - resources-finalizer.argocd.argoproj.io
      source:
        path: appOfApps
        repoURL: 'http://gitea-http.gitea:3000/ops/homelab'
        targetRevision: master
      destination:
        namespace: argocd
        server: 'https://kubernetes.default.svc'
      project: default
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          limit: 5
          backoff:
            duration: 5s
            maxDuration: 3m0s
            factor: 2
        syncOptions:
          - CreateNamespace=true
