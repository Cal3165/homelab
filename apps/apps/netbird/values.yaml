dashboard:
  repository: netbirdio/dashboard
  pullPolicy: IfNotPresent
  tag: latest
signal:
  repository: netbirdio/signal
  pullPolicy: IfNotPresent
  tag: latest
management:
  repository: netbirdio/management
  pullPolicy: IfNotPresent
  tag: latest
# coturn:
#   repository: coturn/coturn
#   pullPolicy: IfNotPresent
#   tag: latest
alpine:
  repository: alpine
  pullPolicy: IfNotPresent
  tag: latest

manifestManager:
  enabled: true
workload:
  main:
    type: Deployment
    enabled: true
    primary: true
    podSpec:
      containers:
        main:
          enabled: true
          primary: true
          imageSelector: dashboard
          command:
          - "/bin/sh"
          - "-c"
          args:
          - "mkdir -p /run/nginx; /usr/bin/supervisord -c /etc/supervisord.conf"
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
            runAsGroup: 0
            readOnlyRootFilesystem: false
          env:
            AUTH_AUDIENCE:
              secretKeyRef:
                name: netbird-generated-secret
                key: client-id
                expandObjectName: false
            AUTH_CLIENT_ID:
              secretKeyRef:
                name: netbird-generated-secret
                key: client-id
                expandObjectName: false
          envFrom:
          - configMapRef:
              name: dash-env
              expandObjectName: true
          probes:
            liveness:
              type: http
              path: /
              port: main
            readiness:
              type: http
              path: /
              port: main
            startup:
              type: http
              path: /
              port: main
  signal:
    type: Deployment
    enabled: true
    podSpec:
      containers:
        main:
          enabled: true
          primary: true
          imageSelector: signal
          probes:
            liveness:
              enabled: false
            readiness:
              enabled: false
            startup:
              enabled: false
  management:
    type: Deployment
    enabled: true
    podSpec:
      initContainers:
        mountconfig:
          enabled: true
          type: init
          imageSelector: alpine
          command:
          - "cp"
          - "/etc/netbirdmap/management.json"
          - "/etc/netbird/management.json"
      containers:
        main:
          enabled: true
          primary: true
          imageSelector: management
          args:
          - "--port"
          - "80"
          - "--log-file"
          - "console"
          - "--disable-anonymous-metrics=true"
          - "--single-account-mode-domain=vpn.notusa.uk"
          - "--dns-domain=netbird.selfhosted"
          probes:
            liveness:
              enabled: false
            readiness:
              enabled: false
            startup:
              enabled: false
              # coturn:
              #   type: Deployment
              #   enabled: true
              #   podSpec:
              #     containers:
              #       main:
              #         enabled: true
              #         primary: true
              #         imageSelector: coturn
              #         securityContext:
              #           privileged: true
              #           capabilities:
              #             add:
              #             - CAP_NET_BIND_SERVICE
              #         args:
              #         - "-c /etc/turnserver.conf"
              #         probes:
              #           liveness:
              #             enabled: false
              #           readiness:
              #             enabled: false
              #           startup:
              #             enabled: false

service:
  main:
    annotations:
      traefik.ingress.kubernetes.io/service.passhostheader: "true"
    enabled: true
    targetSelector: main
    ports:
      main:
        enabled: true
        targetSelector: main
        port: 80
        protocol: http
        targetPort: 80
  signal:
    annotations:
      traefik.ingress.kubernetes.io/service.passhostheader: "true"
      traefik.ingress.kubernetes.io/service.serversscheme: h2c
    enabled: true
    targetSelector: signal
    ports:
      signal:
        enabled: true
        targetSelector: main
        port: 80
        protocol: http
        targetPort: 80
  management:
    annotations:
      traefik.ingress.kubernetes.io/service.passhostheader: "true"
      traefik.ingress.kubernetes.io/service.serversscheme: h2c
    enabled: true
    targetSelector: management
    ports:
      management:
        enabled: true
        targetSelector: main
        port: 80
        protocol: http
        targetPort: 80
  metrics:
    enabled: true
    targetSelector: management
    ports:
      metrics:
        enabled: true
        targetSelector: main
        port: 8081
        protocol: http
        targetPort: 8081
  api:
    annotations:
      traefik.ingress.kubernetes.io/service.passhostheader: "true"
    enabled: true
    targetSelector: management
    ports:
      api:
        enabled: true
        targetSelector: main
        port: 80
        protocol: http
        targetPort: 80
        # coturn:
        #   enabled: true
        #   targetSelector: coturn
        #   ports:
        #     main:
        #       enabled: true
        #       targetSelector: main
        #       port: 3478
        #       protocol: tcp
        #       targetPort: 3478
        #     mainudp:
        #       enabled: true
        #       targetSelector: main
        #       port: 3478
        #       protocol: udp
        #       targetPort: 3478
        #     second:
        #       enabled: true
        #       targetSelector: main
        #       port: 5349
        #       protocol: tcp
        #       targetPort: 5349
        #     secondudp:
        #       enabled: true
        #       targetSelector: main
        #       port: 5349
        #       protocol: udp
        #       targetPort: 5349

ingress:
  main:
    enabled: true
    targetSelector:
      main: main
    hosts:
    - host: vpn.notusa.uk
      paths:
      - path: /
        pathType: Prefix
    integrations:
      certManager:
        enabled: true
        certificateIssuer: "cloudflare-issuer"
      traefik:
        enabled: true
        entrypoints:
        - websecure
        enableFixedMiddlewares: true
        forceTLS: true
        allowCors: false
      homepage:
        enabled: false
  api:
    enabled: true
    targetSelector:
      api: api
    hosts:
    - host: vpn.notusa.uk
      paths:
      - path: /api
        pathType: Prefix
    integrations:
      certManager:
        enabled: true
        certificateIssuer: "cloudflare-issuer"
      traefik:
        enabled: true
        entrypoints:
        - websecure
        enableFixedMiddlewares: true
        forceTLS: true
        allowCors: false
      homepage:
        enabled: false
  management:
    enabled: true
    targetSelector:
      management: management
    hosts:
    - host: vpn.notusa.uk
      paths:
      - path: /management
        pathType: Prefix
    integrations:
      certManager:
        enabled: true
        certificateIssuer: "cloudflare-issuer"
      traefik:
        enabled: true
        entrypoints:
        - websecure
        enableFixedMiddlewares: true
        forceTLS: true
        allowCors: false
      homepage:
        enabled: false
  signal:
    enabled: true
    targetSelector:
      signal: signal
    hosts:
    - host: vpn.notusa.uk
      paths:
      - path: /signalexchange
        pathType: Prefix
    integrations:
      certManager:
        enabled: true
        certificateIssuer: "cloudflare-issuer"
      traefik:
        enabled: true
        entrypoints:
        - websecure
        enableFixedMiddlewares: true
        forceTLS: true
        allowCors: false
      homepage:
        enabled: false

configmap:
  dash-env:
    enabled: true
    data:
      NETBIRD_MGMT_API_ENDPOINT: https://vpn.notusa.uk:443
      NETBIRD_MGMT_GRPC_API_ENDPOINT: https://vpn.notusa.uk:443
      AUTH_CLIENT_SECRET:
      AUTH_AUTHORITY: https://auth.notusa.uk/application/o/netbird/
      USE_AUTH0: "false"
      AUTH_SUPPORTED_SCOPES: openid profile email offline_access api
      AUTH_REDIRECT_URI:
      AUTH_SILENT_REDIRECT_URI:
      NETBIRD_TOKEN_SOURCE: accessToken
      NGINX_SSL_PORT: "443"
      LETSENCRYPT_DOMAIN: notusa.uk
      LETSENCRYPT_EMAIL: Clave.pupal-0i@icloud.com

persistence:
  letsencrypt:
    enabled: true
    type: pvc
    retain: true
    targetSelector:
      main:
        main:
          mountPath: /etc/letsencrypt/
          readOnly: false
      management:
        main:
          mountPath: /etc/letsencrypt/
          readOnly: true
  mgmt:
    enabled: true
    type: pvc
    retain: true
    targetSelector:
      management:
        main:
          mountPath: /var/lib/netbird
          readOnly: false
  signal:
    enabled: true
    type: pvc
    retain: true
    targetSelector:
      signal:
        main:
          mountPath: /var/lib/netbird
          readOnly: false
  management:
    enabled: true
    type: pvc
    retain: true
    targetSelector:
      management:
        mountconfig:
          mountPath: /etc/netbird/
          readOnly: false
        main:
          mountPath: /etc/netbird/
          readOnly: false
  managementconf:
    enabled: true
    type: secret
    objectName: netbird-management-config-secret
    expandObjectName: false
    optional: true
    defaultMode: "0777"
    mountPath: /etc/netbirdmap/management.json
    subPath: management.json
    items:
    - key: management.json
      path: management.json
    readOnly: false
    targetSelector:
      management:
        mountconfig: {}
  # coturn:
  #   enabled: true
  #   type: secret
  #   objectName: coturn-config-secret
  #   optional: true
  #   defaultMode: "0777"
  #   mountPath: /etc/turnserver.conf
  #   subPath: turnserver.conf
  #   items:
  #   - key: turnserver.conf
  #     path: turnserver.conf
  #   readOnly: false
  #   targetSelector:
  #     coturn:
  #       main: {}
